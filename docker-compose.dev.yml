version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:4000
      - NEXT_PUBLIC_WS_URL=ws://localhost:4000
    depends_on:
      - api-gateway

  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile.dev
    ports:
      - "4000:4000"
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=4000
      - REDIS_URL=redis://redis:6379
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
    depends_on:
      - redis
      - core-service
      - workflow-service
      - block-service
      - ai-service

  core-service:
    build:
      context: ./services/core
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/core:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://synapse:synapse123@postgres:5432/synapse
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis

  workflow-service:
    build:
      context: ./services/workflow
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/workflow:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://synapse:synapse123@postgres:5432/synapse
      - MONGODB_URL=mongodb://mongo:27017/synapse
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - mongo
      - redis

  block-service:
    build:
      context: ./services/block
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/block:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://synapse:synapse123@postgres:5432/synapse
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis

  ai-service:
    build:
      context: ./services/ai
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/ai:/app
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis

  execution-engine:
    build:
      context: ./services/execution-engine
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/execution-engine:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://mongo:27017/synapse
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
    depends_on:
      - redis
      - mongo
      - minio

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=synapse
      - POSTGRES_USER=synapse
      - POSTGRES_PASSWORD=synapse123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

volumes:
  postgres_data:
  mongo_data:
  redis_data:
  minio_data: